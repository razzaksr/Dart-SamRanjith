	Flutter Development:
		Cross platform application

	Android: Java, Kotlin
	Web app: Spring, Laravel, ASP Web API, Node, Flask/ DJango
	iOS: Swift
	Desktop: swing, wpf, tkinter
	

	Dart programming language:
	Console application:
		Back end/ API
		Data end/ File, MySQL
	Cross Application: Desktop, Web, Android, iOS
		UI		>> Flutter
		API		>> Flutter with Firebase
		Data		>> Fire store
	Cross Application: Desktop, Web, Android, iOS
		UI		>> Flutter
		API		>> Node JS/ Java/ Python
		Data		>> Any(NoSQL, MySQL)
	
	Editor tools:
		vs code >> browser(live changes/ live server)
		eclipse
		IntelliJ
	Software Development Kit:
		Java SDK >> JDK
		Microsoft SDK >> dotnet
		Dart SDK

	Environment Setup:
		Installing dart sdk
		Installing vs code

	creating file:
		greet.dart
	write sample code:
		void main(){print("Greeting message");}
	Run:
		open integrated terminal by right click the file and type 			following command
		dart greet.dart
	Output: 
		in the console/ terminal

	program:
		creating an application
	Components of applications
		Data			>> required data
			variables, data types(data size and format of variables)
		Functionality	>> operations
			functions, operators
		eg:
			GPay:
				data >> email, account, upi
				functionality>> transfer, recharge, bill pay
			Insta:
				Data >> email, name, gender, dob
				functionality>> post, comment, like, share
			eCom:
				Data >> email, phone, name, address
				Functionality>> place order, kart, wish list, profile
	in built classes:
		String, Map, Set, RegExp
	in built packages/ folders:
		dart:io, dart:core


	Tokens:
		comments: compiler wont consider to run
			// single line comment
			/*
			multi
			line
			comment
			*/
		keywords: 61 reserved words with in built meaning
			eg: if, for, continue, void, return
		identifiers: user defined name with custom meaning
			variables, functions, class, package
			rule's:
				do's		>> kitkat, kit89kat, _kitkat, _98kitkat
				dont's	>> public, kit kat, kit&*kat, 8kitkat
		data types: format
			int, bigint, double, num		>> numerical types
			String					>> char type
			bool						>> Boolean true/ false
			grouping data types:
				List, Set, Map
			
		operators
		separators:
			, ;  {}


		Task:
			patient: 
			name, age, gender, height, weight, symptoms, contact, 					isInsuranceAvailable
			
			bank kyc:
				name, address, accountType, mobile, email
			name your account accountType opening application has received we will inform the confirmation via email or contact

		Type Conversion:
			parsing>> String to int, String to double, String to bool
		
		Operators:
		Numberical types: results will be numbers
			Arithemetic		+ - * / %
			Unary			++(increment by 1) --(decremenet by 1)
			Assignemnt		+=	-=	*=	/=	%=
			Bitwise			& | ^ >> <<
		Boolean types: results will be true/ false boolean values
			Relational		> >= < <= == !=
			Logical			&& || ( combine more than one relational )

		Task:
			BMI Calculator:
				weight in kg
				height in cm>> to meter (h/100)
				bmi = weight/m*m
			Currency bound to indian rupee
			
			Check loan for housing loan
				income 5L and above and NoOfYearItrFiled is 4 or more
		

		Arithmetic use cases:
			1. LOA petrol bunk discount:
				get the user amount in int 
				get discount percentage in double
				subtract discount amount from given user amount
			2. GPay spiltup share:
				get any 3 expenses like food, travel, purchase in int's
				find totalExpenses
				get personcount from user
				totalExpenses/personcount
		Relational use cases:
			1. Find Billionor:
				get the networth of ambani, adani in double
				check "Is adani is rich over ambani "
			2. Ladies compartment seat allocation:
				get gender from user in String such as "male" "female" "other"
				check "can i get seat " should be true only if gender is "female"
		
		Decision Making/ Control Statements:
			to understand perform user required action based on the condition using relational and logical operators
			select one action from the many using condition
			eg:
				login into insta to perform any following actions
				1. watch reels
				2. like reels
				3. comment reels
				4. post new reel
				5. save any reel
				6. message with friend
			
			if			>> int, double, String formats data, also you can implement all types of relational and logical operators
				if(condition){
					// block of statements when condition statisfied
				}

				if(condition){
					// block of statements when condition statisfied
				}
				else{
					// block of statements when condition fails
				}

				ladder
				if(condition1){
					// block of condition1 satisfied
				}
				else if(condition2){
					// block of condition2 satisfied
				}
				.
				.
				.
				.
				.
				else{
					// block of false of all condition
				}
			switch >> only int, String formats allowed, also we cant use >,>=,<,<=, logical operators
			switch(condition){
				case : ...
				case : ....
				case :.....
				default:... if nothing matches
			}
	Task:
		1. using if else
			print you can participate in election if userage is 18 or above, otherwise print you can't participate or vote in election
		2. using if else if ... ladder
			enter the annualincome and print what is tax percentage they have to pay
			5 or less than >> no tax
			5 to 10 >> 5 percent
			10 to 15 >> 10 percent
			15 to 20 >> 20 percent
			20 to 30 >> 25 percent
			30 or above> 30 percent
			eg:
				2.5  no tax
				7.8	 5 percent tax
		3. Using switch to check theatre where user given movie running
			eg:
				Coolie	>> Divyam Cinemas
				Vikram	>> Mala Theatre
				Leo		>> Divyam Cinemas
				Kantara	>> Venkatesh Cinemas
				Maanaadu>> Mala Cinemas
				Goat	>> Prabas Cinemas
				GBU		>> Divyam Cinemas
	
	Loop Statements:
		block of codes will repeat/ recursively until the condition false

		repeatation: 
			begin			>> initialization
			step forward	>> iteration
			end				>> condition

		for: entry check
			for(init;cond;iter){
				// block to be repeated
			}
		while: entry check
			// init
			while(condition){
				// block to be repeated
				// iter
			}
		do while: exit check
		// init
		do{
			// block to be repeated
			// iter
		}while(cond);

	nested loop:
		loop1:
			loop1 logic to be repeated
			loop2:
				loop2 logic to be repeated

		eg:
			theatre single counter ticket issue
			show >> 1 to 4>> loop1
				show time
				tickets >> 1 to 300>> loop2
					get the money and issue the ticket
			
			show 1>>
				ticket 1 to 300: get the money and issue the ticket
			show 2>>
				ticket 1 to 300: get the money and issue the ticket
			show 3>>
				ticket 1 to 300: get the money and issue the ticket
			show 4>>
				ticket 1 to 300: get the money and issue the ticket
	List/ grouping:
		storage where multiple data are stored under one variable
		those multiple data are belong to same type or different
		syntax: var variable_name = []	// kart
		variable	>> all values
		values in list are located with index: starts with 0 ... size-1
		eg:
			var marks = [34,89,110,56,90,34,11,46];	>> size = 8
			index: 0 to 7
			marks[0]	>> 34
			marks[7]	>> 46
			marks[8]	>> error
	Task:
		Store 10 account balances in the list among perform following process
		1. print all account balances
		2. Add new account balance
		3. Update specific account balance using position by deposit
		4. Update specific account balance using position by withdraw
		